/**********************************************
 * Self-Driving Car Nano-degree - Udacity
 *  Created on: December 11, 2020
 *      Author: Mathilde Badoual
 **********************************************/
#include <vector>

#ifndef PID_CONTROLLER_H
#define PID_CONTROLLER_H

class PID {
public:

    // Create the PID class
    
    /*
    * Errors
    */
    double cte {0.0};
    double intCte {0.0};
    double diffCte {0.0};
    double prevCte {0.0};

    /*
    * Coefficients
    */
    double Kp;
    double Kd;
    double Ki;
    
    /*
     * Twiddle params
     */
    double best_error {10.0};
    double mean_error {0.0};
    double Kpc {0.05};
    double Kdc {0.05};
    double Kic {0.005};
    std::vector<bool> gradients {true, true, true};
    unsigned iters {19};

    /*
    * Output limits
    */
    double output_lim_min;
    double output_lim_max;
  
    /*
    * Delta time
    */
    double dt = {0.0};

    /*
    * Constructor
    */
    PID();

    /*
    * Destructor.
    */
    virtual ~PID();

    /*
    * Initialize PID.
    */
    void Init(double Kp, double Ki, double Kd, double output_lim_max, double output_lim_min);

    /*
    * Update the PID error variables given cross track error.
    */
    void UpdateError(double cte);

    /*
    * Calculate the total PID error.
    */
    double TotalError();
  
    /*
    * Update the delta time.
    */
    double UpdateDeltaTime(double new_delta_time);
};

#endif //PID_CONTROLLER_H


